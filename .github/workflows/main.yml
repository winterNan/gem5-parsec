# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Install packages
        run: sudo apt-get install build-essential m4 git python python-dev gettext libx11-dev libxext-dev xorg-dev unzip texinfo freeglut3-dev
        
      # - name: Build blackscholes
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p blackscholes
        
      # - name: Build bodytrack
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p bodytrack
        
      # - name: Build canneal
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p canneal
        
      # - name: Build dedup
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p dedup
        
      # - name: Build facesim
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p facesim
        
      # - name: Build ferret
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p ferret
        
      # - name: Build fluidanimate
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p fluidanimate
        
      # - name: Build freqmine
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p freqmine
        
      # - name: Build streamcluster
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p streamcluster
        
      # - name: Build x264
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p x264
        
      # - name: Build swaptions
      #   run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p swaptions
      
      - name: Build vips # 1) build it once to generate libtool. 2) # build it twice with a customized sh script for static link (not in the default PARSEC3.0 tar)
        run: source env.sh && cd bin && parsecmgmt -a build -c gcc-hooks -p vips && cd ../ && ./vips.static_link.sh
        
      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
